id: robotics_conditioning
label: conditioning
category: '[robotics]'

templates:
  imports: from gnuradio import robotics
  make: robotics.conditioning(${debug}, ${expression}, ${data_in}, ${data_out})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
- id: debug
  label: Debug
  dtype: bool
  default: False
- id: expression
  label: Expression
  dtype: string
  default: "X"
- id: data_in
  label: Input Data Type
  dtype: string
  default: "Float"
  options: ["Float", "Int"]
  option_labels: ["Float", "Int"]
- id: data_out
  label: Output Data Type
  dtype: string
  default: "Int"
  options: ["Float", "Int"]
  option_labels: ["Float", "Int"]
#- id: ...
#  label: ...
#  dtype: ...

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: In
  domain: message
#  dtype: ...
#  vlen: ...
  optional: 1

outputs:
- label: Out
  domain: message
#  dtype: ...
#  vlen: ...
  optional: 1

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
